{"version":3,"file":"FunctionManager.js","names":["getLogger","l","FunctionManager","constructor","functions","Map","use","name","fn","has","Error","info","set"],"sources":["../src/FunctionManager.ts"],"sourcesContent":["import { OutputContext } from './@types';\nimport { getLogger } from './Logger';\n\nconst l = getLogger('FunctionManager');\n\nexport type OpenAiFunctionArgs = any;\n\nexport type OpenAiFunction = (\n  ctx: OutputContext,\n  args: OpenAiFunctionArgs,\n) => Promise<string>;\n\nexport class FunctionManager {\n  functions: Map<string, OpenAiFunction>;\n\n  constructor() {\n    this.functions = new Map();\n  }\n\n  use(name: string, fn: OpenAiFunction) {\n    if (this.functions.has(name)) {\n      throw new Error(`A function with the name \"${name}\" already exists.`);\n    }\n\n    l.info(`Registering AI function with the name \"${name}\".`);\n    this.functions.set(name, fn);\n  }\n}\n"],"mappings":"AACA,OAASA,SAAS,KAAQ,UAAU,CAEpC,KAAM,CAAAC,CAAC,CAAGD,SAAS,CAAC,iBAAiB,CAAC,CAStC,MAAO,MAAM,CAAAE,eAAgB,CAG3BC,WAAWA,CAAA,CAAG,CACZ,IAAI,CAACC,SAAS,CAAG,GAAI,CAAAC,GACvB,CAEAC,GAAGA,CAACC,IAAY,CAAEC,EAAkB,CAAE,CACpC,GAAI,IAAI,CAACJ,SAAS,CAACK,GAAG,CAACF,IAAI,CAAC,CAAE,CAC5B,KAAM,IAAI,CAAAG,KAAK,CAAE,6BAA4BH,IAAK,mBAAkB,CACtE,CAEAN,CAAC,CAACU,IAAI,CAAE,0CAAyCJ,IAAK,IAAG,CAAC,CAC1D,IAAI,CAACH,SAAS,CAACQ,GAAG,CAACL,IAAI,CAAEC,EAAE,CAC7B,CACF"}