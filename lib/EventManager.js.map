{"version":3,"file":"EventManager.js","names":["ChatCompletionCallInitiator","getLogger","l","EventManager","constructor","sessionStorage","errorHandler","info","defaultEventHandler","error","eventHandlers","Map","use","name","eventHandler","has","Error","maxLoops","undefined","priority","set","useDefault","executeEventHandlers","response","eventHandlersIterator","entries","currentEventHandlerEntry","next","triggeredEvents","done","value","trigger","eventDetector","push","length","sort","a","b","get","sessionId","systemMessageName","session","initiator","call_again","incrementHandlerCount","getSession","handlersCount","handler","Promise","resolve"],"sources":["../src/EventManager.ts"],"sourcesContent":["import { SessionStorage } from './session/SessionStorage';\nimport {\n  ChatCompletionCallInitiator,\n  ErrorHandler,\n  OutputContext,\n} from './@types';\nimport { getLogger } from './Logger';\n\nconst l = getLogger('EventManager');\n\nexport type EventDetector = (\n  response: OutputContext,\n  next: () => Promise<void>,\n) => Promise<boolean>;\n\nexport type Handler = (\n  response: OutputContext,\n  next: () => Promise<void>,\n) => Promise<void>;\n\nexport interface EventHandler {\n  eventDetector: EventDetector;\n  handler: Handler;\n  priority: number;\n  maxLoops: number;\n}\n\nexport type DefaultHandler = (response: OutputContext) => Promise<void>;\n\nexport interface TriggeredEvent {\n  name: string;\n  priority: number;\n}\n\nexport class EventManager {\n  private eventHandlers: Map<string, EventHandler>;\n  private defaultEventHandler: DefaultHandler;\n\n  constructor(\n    private readonly sessionStorage: SessionStorage,\n    private errorHandler: ErrorHandler,\n  ) {\n    l.info('EventManager initialization...');\n\n    this.defaultEventHandler = async () => {\n      l.error(\n        'LLM Event not detected. Library try to continue with DefaultEventHandler, but it is not defined. Please define using useDefaultHandler(response: string): Promise<void> to receive the response.',\n      );\n    };\n\n    this.eventHandlers = new Map();\n  }\n\n  use(name: string, eventHandler: EventHandler) {\n    if (this.eventHandlers.has(name)) {\n      throw new Error(\n        `An event handler with the name \"${name}\" already exists.`,\n      );\n    }\n\n    // Set a default value for maxLoops if it's not set\n    if (eventHandler.maxLoops === undefined) {\n      eventHandler.maxLoops = 10; // default value\n    }\n    // Set a default value for priority if it's not set\n    if (!eventHandler.priority) {\n      eventHandler.priority = 0; // default value\n    }\n\n    l.info(\n      `Registered event handler with the name \"${name}\". Priority: ${eventHandler.priority}. Max Loops: ${eventHandler.maxLoops}.`,\n    );\n\n    this.eventHandlers.set(name, eventHandler);\n  }\n\n  useDefault(eventHandler: DefaultHandler) {\n    l.info(`Registered default EventHandler.`);\n    this.defaultEventHandler = eventHandler;\n  }\n\n  async executeEventHandlers(response: OutputContext): Promise<void> {\n    let eventHandlersIterator = this.eventHandlers.entries();\n    let currentEventHandlerEntry = eventHandlersIterator.next();\n    let triggeredEvents: TriggeredEvent[] = [];\n\n    try {\n      const next = async (): Promise<void> => {\n        if (currentEventHandlerEntry.done) return;\n        let [name, eventHandler] = currentEventHandlerEntry.value;\n        currentEventHandlerEntry = eventHandlersIterator.next();\n\n        try {\n          const trigger = await eventHandler.eventDetector(response, next);\n          if (trigger) {\n            triggeredEvents.push({ name, priority: eventHandler.priority });\n          }\n        } catch (error) {\n          l.error(\n            `Error occurred in eventDetector of event handler ${name}: ${error}`,\n          );\n          throw error;\n        }\n      };\n\n      await next();\n\n      // if no event handler was triggered, execute the default event handler\n      if (triggeredEvents.length === 0)\n        return this.defaultEventHandler(response);\n\n      triggeredEvents.sort((a, b) => b.priority - a.priority);\n\n      if (triggeredEvents.length > 0) {\n        const { name } = triggeredEvents[0];\n        const eventHandler = this.eventHandlers.get(name);\n        if (eventHandler) {\n          try {\n            // tracking the number of times an event handler is called\n            const { sessionId, systemMessageName } = response.session;\n            if (response.initiator === ChatCompletionCallInitiator.call_again)\n              await this.sessionStorage.incrementHandlerCount(\n                sessionId,\n                systemMessageName,\n                name,\n              );\n            response.session = await this.sessionStorage.getSession(\n              sessionId,\n              systemMessageName,\n            );\n\n            // over-loop handler prevention\n            const { handlersCount } = response.session;\n            if (handlersCount[name] >= eventHandler.maxLoops)\n              return this.errorHandler(\n                new Error(\n                  `Max Loops Reached, handler: ${name}, maxLoops: ${eventHandler.maxLoops}, counted maxLoops: ${handlersCount[name]}. Please check your event handlers or if your flow requires it, increase maxLoops property of the event handler to a higher value.`,\n                ),\n                response,\n              );\n\n            await eventHandler.handler(response, () => Promise.resolve());\n          } catch (error) {\n            this.errorHandler(error as Error, response);\n            throw error;\n          }\n        }\n      }\n    } catch (error) {\n      l.error(`Error occurred while executing event handlers: ${error}`);\n    }\n  }\n}\n"],"mappings":"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"}