{"version":3,"file":"ChatHistory.js","names":["isNotUndefined","Message","QueryByArrayOfObjects","getLogger","logger","l","Symbol","ChatHistory","constructor","sessionId","systemMessageName","items","map","item","child","info","append","message","push","updateById","id","newData","index","findIndex","Error","Object","assign","archiveById","isArchived","deleteById","splice","appendAfterMessageId","replaceById","replaceAll","messages","length","formatToLLM","filter"],"sources":["../../src/session/ChatHistory.ts"],"sourcesContent":["import { isNotUndefined } from '../helpers';\nimport { Message } from './Message';\nimport { QueryByArrayOfObjects } from './QueryByArrayOfInstance';\nimport { getLogger } from './../Logger';\nimport { Logger } from 'pino';\nimport { PalmMessage } from '../@types';\n\nconst logger = getLogger('ChatHistory');\n\nconst l = Symbol('logger');\n\nexport class ChatHistory extends QueryByArrayOfObjects<Message> {\n  private readonly [l]: Logger; // this Symbol property for exclude logger from built-in Array methods of instance\n\n  constructor(\n    sessionId: string,\n    systemMessageName: string,\n    ...items: Message[]\n  ) {\n    super(...items.map((item) => new Message(item)));\n    this[l] = logger.child({ sessionId, systemMessageName });\n    this[l].info(`ChatHistory initialization...`);\n  }\n\n  append(message: Message): void {\n    this[l].info(`append new message`);\n    this.push(message);\n  }\n\n  // partial update by id\n  updateById(id: string, newData: Partial<Message>): void {\n    this[l].info(`update message with id: ${id}`);\n    const index = this.findIndex((message) => message.id === id);\n    if (index === -1) {\n      throw new Error(`Message with id \"${id}\" not found`);\n    }\n\n    this[index] = new Message(Object.assign({}, this[index], newData));\n  }\n\n  archiveById(id: string): void {\n    this[l].info(`archive message with id: ${id}`);\n    this.updateById(id, { isArchived: true });\n  }\n\n  deleteById(id: string): void {\n    this[l].info(`delete message by id: ${id}`);\n    const index = this.findIndex((message) => message.id === id);\n    if (index === -1) {\n      throw new Error(`Message with id \"${id}\" not found`);\n    }\n    this.splice(index, 1);\n  }\n\n  appendAfterMessageId(message: Message, id: string): void {\n    this[l].info(`append message after message by id: ${id}`);\n    const index = this.findIndex((message) => message.id === id);\n    if (index === -1) {\n      throw new Error(`Message with id \"${id}\" not found`);\n    }\n    this.splice(index + 1, 0, message);\n  }\n\n  replaceById(id: string, message: Message): void {\n    this[l].info(`replace message by id: ${id}`);\n    const index = this.findIndex((message) => message.id === id);\n    if (index === -1) {\n      throw new Error(`Message with id \"${id}\" not found`);\n    }\n    this[index] = message;\n  }\n\n  replaceAll(messages: Message[]): ChatHistory {\n    this[l].info(`replace all messages`);\n    this.length = 0;\n    this.push(...messages);\n    return this;\n  }\n\n  public formatToLLM(): PalmMessage[] {\n    this[l].info(`format messages to LLM format`);\n    let messages = this.map((message) => message.formatToLLM()).filter(\n      isNotUndefined,\n    );\n\n    return messages;\n  }\n}\n"],"mappings":"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"}