{"version":3,"file":"Message.js","names":["v4","uuid","getTimestamp","MessageType","Message","constructor","msg","timestamp","id","author","content","name","tags","customProperties","isArchived","createdAt","updatedAt","toJSON","citationMetadata","formatToLLM","undefined","message","JSON","parse","stringify"],"sources":["../../src/session/Message.ts"],"sourcesContent":["import { v4 as uuid } from 'uuid';\nimport { PalmMessage } from '../@types';\nimport { getTimestamp } from '../helpers';\n\nexport enum MessageType {\n  INJECTION = 'injection',\n  EMBEDDING = 'embedding',\n}\n\nexport class Message implements Omit<PalmMessage, 'author'> {\n  id: string;\n  author: 'user' | 'assistant';\n  citationMetadata?: PalmMessage['citationMetadata'];\n  content?: string;\n  name?: string;\n  tags?: string[] | null;\n  customProperties: Record<string, unknown> | {};\n  isArchived: boolean;\n  createdAt?: Number;\n  updatedAt?: Number;\n\n  constructor(msg: {\n    id?: Message['id'];\n    author: Message['author'];\n    citationMetadata?: Message['citationMetadata'];\n    content?: Message['content'];\n    name?: Message['name'];\n    tags?: Message['tags'];\n    customProperties?: Message['customProperties'];\n    isArchived?: Message['isArchived'];\n    createdAt?: Message['createdAt'];\n    updatedAt?: Message['updatedAt'];\n  }) {\n    const timestamp = getTimestamp();\n\n    this.id = msg.id || uuid();\n    this.author = msg.author || 'user';\n    this.content = msg.content;\n    this.name = msg.name;\n    this.tags = msg.tags || [];\n    this.customProperties = msg.customProperties || {};\n    this.isArchived = msg.isArchived || false;\n    this.createdAt = msg.createdAt || timestamp;\n    this.updatedAt = msg.updatedAt || timestamp;\n  }\n\n  toJSON(): Partial<Message> {\n    return {\n      id: this.id,\n      author: this.author,\n      citationMetadata: this.citationMetadata,\n      content: this.content,\n      name: this.name,\n      tags: this.tags,\n      customProperties: this.customProperties,\n      isArchived: this.isArchived,\n      createdAt: this.createdAt,\n      updatedAt: this.updatedAt,\n    };\n  }\n\n  //use to filter out additional fields\n  public formatToLLM(): PalmMessage | undefined {\n    if (this.isArchived === true) return undefined;\n\n    const message = {\n      author: this.author,\n      content: this.content,\n      citationMetadata: this.citationMetadata,\n    };\n\n    return JSON.parse(JSON.stringify(message)); //delete undefined fields\n  }\n}\n"],"mappings":"AAAA,OAASA,EAAE,GAAI,CAAAC,IAAI,KAAQ,MAAM,CAEjC,OAASC,YAAY,KAAQ,YAAY,CAEzC,UAAY,CAAAC,WAAW,UAAXA,WAAW,EAAXA,WAAW,0BAAXA,WAAW,gCAAX,CAAAA,WAAW,MAKvB,MAAO,MAAM,CAAAC,OAA+C,CAY1DC,WAAWA,CAACC,GAWX,CAAE,CACD,KAAM,CAAAC,SAAS,CAAGL,YAAY,CAAC,CAAC,CAEhC,IAAI,CAACM,EAAE,CAAGF,GAAG,CAACE,EAAE,EAAIP,IAAI,CAAC,CAAC,CAC1B,IAAI,CAACQ,MAAM,CAAGH,GAAG,CAACG,MAAM,EAAI,MAAM,CAClC,IAAI,CAACC,OAAO,CAAGJ,GAAG,CAACI,OAAO,CAC1B,IAAI,CAACC,IAAI,CAAGL,GAAG,CAACK,IAAI,CACpB,IAAI,CAACC,IAAI,CAAGN,GAAG,CAACM,IAAI,EAAI,EAAE,CAC1B,IAAI,CAACC,gBAAgB,CAAGP,GAAG,CAACO,gBAAgB,EAAI,CAAC,CAAC,CAClD,IAAI,CAACC,UAAU,CAAGR,GAAG,CAACQ,UAAU,EAAI,KAAK,CACzC,IAAI,CAACC,SAAS,CAAGT,GAAG,CAACS,SAAS,EAAIR,SAAS,CAC3C,IAAI,CAACS,SAAS,CAAGV,GAAG,CAACU,SAAS,EAAIT,SACpC,CAEAU,MAAMA,CAAA,CAAqB,CACzB,MAAO,CACLT,EAAE,CAAE,IAAI,CAACA,EAAE,CACXC,MAAM,CAAE,IAAI,CAACA,MAAM,CACnBS,gBAAgB,CAAE,IAAI,CAACA,gBAAgB,CACvCR,OAAO,CAAE,IAAI,CAACA,OAAO,CACrBC,IAAI,CAAE,IAAI,CAACA,IAAI,CACfC,IAAI,CAAE,IAAI,CAACA,IAAI,CACfC,gBAAgB,CAAE,IAAI,CAACA,gBAAgB,CACvCC,UAAU,CAAE,IAAI,CAACA,UAAU,CAC3BC,SAAS,CAAE,IAAI,CAACA,SAAS,CACzBC,SAAS,CAAE,IAAI,CAACA,SAClB,CACF,CAGOG,WAAWA,CAAA,CAA4B,CAC5C,GAAI,IAAI,CAACL,UAAU,GAAK,IAAI,CAAE,MAAO,CAAAM,SAAS,CAE9C,KAAM,CAAAC,OAAO,CAAG,CACdZ,MAAM,CAAE,IAAI,CAACA,MAAM,CACnBC,OAAO,CAAE,IAAI,CAACA,OAAO,CACrBQ,gBAAgB,CAAE,IAAI,CAACA,gBACzB,CAAC,CAED,MAAO,CAAAI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACH,OAAO,CAAC,CAC3C,CACF"}