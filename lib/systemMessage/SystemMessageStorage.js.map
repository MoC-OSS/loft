{"version":3,"file":"SystemMessageStorage.js","names":["getLogger","l","SystemMessageStorage","constructor","client","info","syncSystemMessages","data","existingNames","Set","pipeline","systemMessages","forEach","p","set","name","JSON","stringify","add","storedNames","keys","storedName","has","del","exec","getSystemMessageByName","get","undefined","parse","error","updateSystemMessageByName","newSystemMessage","deleteSystemMessageByName"],"sources":["../../src/systemMessage/SystemMessageStorage.ts"],"sourcesContent":["import { Redis, Cluster } from 'ioredis';\nimport {\n  CreateChatCompletionRequestType,\n  SystemMessageType,\n} from '../schema/CreateChatCompletionRequestSchema';\nimport { getLogger } from './../Logger';\n\nconst l = getLogger('SystemMessageStorage');\n\nexport class SystemMessageStorage {\n  private client: Redis | Cluster;\n\n  constructor(client: Redis | Cluster) {\n    l.info('SystemMessageStorage initialization...');\n    this.client = client;\n  }\n\n  public async syncSystemMessages(\n    data: CreateChatCompletionRequestType,\n  ): Promise<void> {\n    l.info('syncing systemMessages to redis...');\n    const existingNames: Set<string> = new Set();\n    const pipeline = this.client.pipeline();\n\n    // Iterate through the ingested SystemMessages and store them in Redis\n    data.systemMessages.forEach((p) => {\n      pipeline.set(p.name, JSON.stringify(p));\n      existingNames.add(p.name);\n    });\n\n    // Retrieve the existing names from Redis\n    const storedNames = await this.client.keys('*');\n\n    // Find and remove the SystemMessages with names that are missing in the received SystemMessages\n    storedNames.forEach((storedName) => {\n      if (!existingNames.has(storedName)) {\n        pipeline.del(storedName);\n      }\n    });\n\n    await pipeline.exec();\n  }\n\n  public async getSystemMessageByName(\n    name: string,\n  ): Promise<SystemMessageType | null> {\n    try {\n      l.info(`getting systemMessage: ${name} from redis...`);\n\n      const data = await this.client.get(name);\n      if (data === null || data === undefined) return null;\n\n      return JSON.parse(data ?? '');\n    } catch (error) {\n      l.error(error);\n      throw error;\n    }\n  }\n\n  public async updateSystemMessageByName(\n    name: string,\n    newSystemMessage: string,\n  ): Promise<void> {\n    l.info(`updating systemMessage: ${name} in redis...`);\n    await this.client.set(name, newSystemMessage);\n  }\n\n  public async deleteSystemMessageByName(name: string): Promise<void> {\n    l.info(`deleting systemMessage: ${name} from redis...`);\n    await this.client.del(name);\n  }\n}\n"],"mappings":"AAKA,OAASA,SAAS,KAAQ,aAAa,CAEvC,KAAM,CAAAC,CAAC,CAAGD,SAAS,CAAC,sBAAsB,CAAC,CAE3C,MAAO,MAAM,CAAAE,oBAAqB,CAGhCC,WAAWA,CAACC,MAAuB,CAAE,CACnCH,CAAC,CAACI,IAAI,CAAC,wCAAwC,CAAC,CAChD,IAAI,CAACD,MAAM,CAAGA,MAChB,CAEA,KAAa,CAAAE,kBAAkBA,CAC7BC,IAAqC,CACtB,CACfN,CAAC,CAACI,IAAI,CAAC,oCAAoC,CAAC,CAC5C,KAAM,CAAAG,aAA0B,CAAG,GAAI,CAAAC,GAAK,CAC5C,KAAM,CAAAC,QAAQ,CAAG,IAAI,CAACN,MAAM,CAACM,QAAQ,CAAC,CAAC,CAGvCH,IAAI,CAACI,cAAc,CAACC,OAAO,CAAEC,CAAC,EAAK,CACjCH,QAAQ,CAACI,GAAG,CAACD,CAAC,CAACE,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACJ,CAAC,CAAC,CAAC,CACvCL,aAAa,CAACU,GAAG,CAACL,CAAC,CAACE,IAAI,CAC1B,CAAC,CAAC,CAGF,KAAM,CAAAI,WAAW,CAAG,KAAM,KAAI,CAACf,MAAM,CAACgB,IAAI,CAAC,GAAG,CAAC,CAG/CD,WAAW,CAACP,OAAO,CAAES,UAAU,EAAK,CAClC,GAAI,CAACb,aAAa,CAACc,GAAG,CAACD,UAAU,CAAC,CAAE,CAClCX,QAAQ,CAACa,GAAG,CAACF,UAAU,CACzB,CACF,CAAC,CAAC,CAEF,KAAM,CAAAX,QAAQ,CAACc,IAAI,CAAC,CACtB,CAEA,KAAa,CAAAC,sBAAsBA,CACjCV,IAAY,CACuB,CACnC,GAAI,CACFd,CAAC,CAACI,IAAI,CAAE,0BAAyBU,IAAK,gBAAe,CAAC,CAEtD,KAAM,CAAAR,IAAI,CAAG,KAAM,KAAI,CAACH,MAAM,CAACsB,GAAG,CAACX,IAAI,CAAC,CACxC,GAAIR,IAAI,GAAK,IAAI,EAAIA,IAAI,GAAKoB,SAAS,CAAE,MAAO,KAAI,CAEpD,MAAO,CAAAX,IAAI,CAACY,KAAK,CAACrB,IAAI,EAAI,EAAE,CAC9B,CAAE,MAAOsB,KAAK,CAAE,CACd5B,CAAC,CAAC4B,KAAK,CAACA,KAAK,CAAC,CACd,KAAM,CAAAA,KACR,CACF,CAEA,KAAa,CAAAC,yBAAyBA,CACpCf,IAAY,CACZgB,gBAAwB,CACT,CACf9B,CAAC,CAACI,IAAI,CAAE,2BAA0BU,IAAK,cAAa,CAAC,CACrD,KAAM,KAAI,CAACX,MAAM,CAACU,GAAG,CAACC,IAAI,CAAEgB,gBAAgB,CAC9C,CAEA,KAAa,CAAAC,yBAAyBA,CAACjB,IAAY,CAAiB,CAClEd,CAAC,CAACI,IAAI,CAAE,2BAA0BU,IAAK,gBAAe,CAAC,CACvD,KAAM,KAAI,CAACX,MAAM,CAACmB,GAAG,CAACR,IAAI,CAC5B,CACF"}