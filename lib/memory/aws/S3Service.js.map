{"version":3,"file":"S3Service.js","names":["GetObjectCommand","PutObjectCommand","S3Client","S3ServiceException","createChatCompletionRequestSchema","PromptSchema","getLogger","l","S3Service","constructor","env","region","bucketName","appName","info","client","getFile","filename","command","Bucket","Key","response","send","Body","err","$metadata","httpStatusCode","warn","getSystemMessages","fileName","file","undefined","errorMessage","error","logToS3","process","exit","systemMessages","JSON","parse","transformToString","toString","getPrompts","prompts","data","catch"],"sources":["../../../src/memory/aws/S3Service.ts"],"sourcesContent":["import {\n  GetObjectCommand,\n  PutObjectCommand,\n  S3Client,\n  PutBucketLifecycleConfigurationCommand,\n  S3ServiceException,\n} from '@aws-sdk/client-s3';\nimport {\n  CreateChatCompletionRequestType,\n  createChatCompletionRequestSchema,\n} from '../../schema/CreateChatCompletionRequestSchema';\nimport { PromptSchema, PromptsFileType } from '../../schema/PromptSchema';\nimport { getLogger } from '../../Logger';\nimport { IStorageService } from '../CloudObjectStorage';\n\nconst l = getLogger('S3Service');\n\nexport class S3Service implements IStorageService {\n  private readonly client: S3Client;\n\n  constructor(\n    private readonly env: string,\n    private readonly region: string,\n    private readonly bucketName: string,\n    private readonly appName: string,\n  ) {\n    l.info('S3Service initialization...');\n    this.client = new S3Client({ region: this.region });\n    l.info(`Put Bucket Lifecycle Configuration to error log files...`);\n  }\n\n  async getFile(filename: string) {\n    try {\n      l.info(`getting file: ${filename} from S3...`);\n      const command = new GetObjectCommand({\n        Bucket: this.bucketName,\n        Key: filename,\n      });\n      const response = await this.client.send(command);\n\n      return response.Body;\n    } catch (err) {\n      if (\n        err instanceof S3ServiceException &&\n        err.$metadata.httpStatusCode == 404\n      ) {\n        l.warn(`File ${filename} not found!`);\n        return null;\n      }\n      throw err;\n    }\n  }\n\n  async getSystemMessages(): Promise<CreateChatCompletionRequestType> {\n    try {\n      l.info('getting systemMessages from S3...');\n      const fileName = `${this.appName}/${this.env}/system_messages.json`;\n      const file = await this.getFile(fileName);\n\n      if (file === null || file === undefined) {\n        const errorMessage = `File ${fileName} not found!`;\n        l.error(errorMessage, 'App will be terminated.');\n        await this.logToS3(errorMessage);\n        process.exit(1);\n      }\n\n      l.info('parsing systemMessages...');\n      const systemMessages = JSON.parse(await file.transformToString());\n      l.info('validating systemMessages...');\n      return createChatCompletionRequestSchema.parse(systemMessages);\n    } catch (error) {\n      l.error(error);\n      await this.logToS3((error as Error).toString());\n      throw error;\n    }\n  }\n\n  async getPrompts(): Promise<PromptsFileType> {\n    try {\n      l.info('getting prompts from S3...');\n      const fileName = `${this.appName}/${this.env}/prompts.json`;\n      const file = await this.getFile(fileName);\n\n      if (file === null || file === undefined) {\n        const errorMessage = `File ${fileName} not found!`;\n        l.error(errorMessage, 'App will be terminated.');\n        await this.logToS3(errorMessage);\n        process.exit(1);\n      }\n\n      l.info('parsing prompts...');\n      const prompts = JSON.parse(await file.transformToString());\n      l.info('validating prompts...');\n      return PromptSchema.parse(prompts);\n    } catch (error) {\n      l.error(error);\n      await this.logToS3((error as Error).toString());\n      throw error;\n    }\n  }\n\n  async logToS3(data: string) {\n    l.info('logging error to S3...');\n    const command = new PutObjectCommand({\n      Bucket: this.bucketName,\n      Key: `${this.appName}/${this.env}/log_errors.txt`,\n      Body: data,\n    });\n\n    await this.client.send(command).catch((err) => l.error(err));\n  }\n}\n"],"mappings":"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"}