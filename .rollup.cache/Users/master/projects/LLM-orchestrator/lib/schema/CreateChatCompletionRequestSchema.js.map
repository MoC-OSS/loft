{"version":3,"file":"CreateChatCompletionRequestSchema.js","sourceRoot":"","sources":["../../src/schema/CreateChatCompletionRequestSchema.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AACxB,OAAO,EAAE,aAAa,EAAE,MAAM,YAAY,CAAC;AAE3C,MAAM,iBAAiB,GAAG,CAAC,CAAC,MAAM,CAAC;IACjC,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE;IACvB,eAAe,EAAE,CAAC,CAAC,MAAM,EAAE;IAC3B,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE;CACjB,CAAC,CAAC;AAEH,MAAM,aAAa,GAAG,CAAC,CAAC,MAAM,CAAC;IAC7B,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC;QACd,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE;KACpB,CAAC;IACF,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC;QACf,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE;KACpB,CAAC;CACH,CAAC,CAAC;AAEH,MAAM,mBAAmB,GAAG,CAAC,CAAC,MAAM,CAAC;IACnC,IAAI,EAAE,CAAC;SACJ,MAAM,EAAE;SACR,MAAM,CACL,CAAC,IAAI,EAAE,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAClC,6HAA6H,CAC9H;IACH,aAAa,EAAE,CAAC,CAAC,MAAM,EAAE;IACzB,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC;IAChC,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE;IACjB,WAAW,EAAE,iBAAiB;CAC/B,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,iCAAiC,GAAG,CAAC;KAC/C,MAAM,CAAC;IACN,cAAc,EAAE,CAAC,CAAC,KAAK,CAAC,mBAAmB,CAAC;CAC7C,CAAC;KACD,MAAM,EAAE,CAAC","sourcesContent":["import { z } from 'zod';\nimport { redisKeyRegex } from '../helpers';\n\nconst ModelPresetSchema = z.object({\n  temperature: z.number(),\n  maxOutputTokens: z.number(),\n  topP: z.number(),\n  topK: z.number(),\n});\n\nconst ExampleSchema = z.object({\n  input: z.object({\n    content: z.string(),\n  }),\n  output: z.object({\n    content: z.string(),\n  }),\n});\n\nconst SystemMessageSchema = z.object({\n  name: z\n    .string()\n    .refine(\n      (name) => redisKeyRegex.test(name),\n      'Invalid systemMessages.name value. Allowed only alphanumeric characters (a-z, A-Z, 0-9) and the specified symbols (: . - _)',\n    ),\n  systemMessage: z.string(),\n  examples: z.array(ExampleSchema),\n  model: z.string(),\n  modelPreset: ModelPresetSchema,\n});\n\nexport const createChatCompletionRequestSchema = z\n  .object({\n    systemMessages: z.array(SystemMessageSchema),\n  })\n  .strict();\n\nexport type CreateChatCompletionRequestType = z.infer<\n  typeof createChatCompletionRequestSchema\n>;\n\nexport type SystemMessageType =\n  CreateChatCompletionRequestType['systemMessages'][number];\n"]}